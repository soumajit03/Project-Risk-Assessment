import streamlit as st
from agents.market_analysis import market_analysis_agent
from agents.risk_scoring import risk_scoring_agent
from agents.project_status import project_status_agent
from agents.reporting import reporting_agent

def crew_ai_agent(query, asset_type=None, project_name=None, report_type=None, timeframe=None, details=None):
    """
    Cliques AI Agent that collaborates with the four agents to provide a unified response.
    :param query: General query for market analysis or risk scoring
    :param asset_type: Asset type for risk scoring
    :param project_name: Project name for project status
    :param report_type: Type of report for reporting agent
    :param timeframe: Timeframe for the report
    :param details: Additional details for reporting or analysis
    :return: Unified response from all agents
    """
    try:
        st.info("Cliques AI is coordinating the agents...")

        # Call Market Analysis Agent
        market_analysis = market_analysis_agent(query) if query else "No market analysis query provided."

        # Call Risk Scoring Agent
        risk_scoring = risk_scoring_agent(asset_type, query) if asset_type and query else "No risk scoring query provided."

        # Call Project Status Agent
        project_status = project_status_agent(project_name, query) if project_name and query else "No project status query provided."

        # Call Reporting Agent
        reporting = reporting_agent(report_type, timeframe, details) if report_type and timeframe else "No reporting query provided."

        # Combine results
        combined_response = f"""
        ### Cliques AI Unified Response:
        #### Market Analysis:
        {market_analysis}

        #### Risk Scoring:
        {risk_scoring}

        #### Project Status:
        {project_status}

        #### Reporting:
        {reporting}
        """
        return combined_response.strip() or "No valid responses generated by the agents."

    except Exception as e:
        st.error(f"Error in Cliques AI: {str(e)}")
        return "An error occurred while processing your request. Please try again."